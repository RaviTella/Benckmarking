{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "projectName": {
            "type": "string",
            "defaultValue": "Benchmarking",
            "metadata": {
                "description": "Specifies a name for generating resource names."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Specifies the location for all resources."
            }
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "benchmarking",
            "metadata": {
                "description": "Specifies a username for the Virtual Machine."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Specifies a password for the Virtual Machine."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_D64s_v4",
            "metadata": {
                "description": "Specifies a Virtual Machine size"
            }
        },
        "resultsStorageConnectionString": {
            "type": "string",
            "metadata": {
                "description": "Specifies a connection string of the storage account where results will be avaialble"
            }
        },
        "cosmosURI": {
            "type": "string",
            "metadata": {
                "description": "Specifies the URI of the Cosmos DB account"
            }
        },
        "cosmosKey": {
            "type": "securestring",
            "metadata": {
                "description": "Specifies the key for the Cosmos DB account"
            }
        },
        "vmCount": {
            "type": "int",
            "defaultValue": 15,
            "metadata": {
                "description": "Specifies the number of Virtual Machines that will part of the test bench"
            }
        },
        "workloadType": {
            "type": "string",
            "defaultValue": "workloadc",
            "metadata": {
                "description": "Specifies the workload"
            }

        },
        "ycsbOperation": {
            "type": "string",
            "defaultValue": "load",
            "metadata": {
                "description": "Specifies the operation"
            }

        },
        "threads": {
            "type": "int",
            "defaultValue": 400,
            "metadata": {
                "description": "Specifies the threads per client"
            }
        },
        "targetOperationsPerSecond": {
            "type": "int",
            "defaultValue": 67000,
            "metadata": {
                "description": "Specifies the maximum number of operations per second"
            }
        },
        "ycsbRecordCount": {
            "type": "int",
            "defaultValue": 1
        },
        "ycsbOperationCount": {
            "type": "int",
            "defaultValue": 50000000
        },
        "ycsbGitRepositoryURL": {
            "type": "string",
            "defaultValue": "https://github.com/simplynaveen20/YCSB.git",
            "metadata": {
                "description": "Specifies the GitHub Url for YCSB source code repository"
            }
        },
        "ycsbGitBranchName": {
            "type": "string",
            "defaultValue": "addingDockerScripts",
            "metadata": {
                "description": "Specifies the GitHub branch for YCSB source code repository"
            }
        },
        "vmScriptExtensionScriptURL": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/RaviTella/Benckmarking/main/execute.sh",
            "metadata": {
                "description": "Specifies the url for the script that is executed by the Virtual Machine script extension"
            }
        },
        "vmScriptExtensionScriptName": {
            "type": "string",
            "defaultValue": "execute.sh",
            "metadata": {
                "description": "Specifies the script extension name for the script that is executed by the Virtual Machine script extension"
            }
        },
        "cloudInit": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/RaviTella/Benckmarking/main/cloud-init.txt",
            "metadata": {
                "description": "Specifies the cloud-init file url"
            }
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "name": "linkedTemplate",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/RaviTella/Benckmarking/main/cosmos/azuredeploy.json",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "projectName": {
                        "value": "[parameters('projectName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "vmSize": {
                        "value": "[parameters('vmSize')]"
                    },
                    "resultsStorageConnectionString": {
                        "value": "[parameters('resultsStorageConnectionString')]"
                    },
                    "cosmosURI": {
                        "value": "[parameters('cosmosURI')]"
                    },
                    "cosmosKey": {
                        "value": "[parameters('cosmosKey')]"
                    },
                    "vmCount": {
                        "value": "[parameters('vmCount')]"
                    },
                    "workloadType": {
                        "value": "[parameters('workloadType')]"
                    },
                    "threads": {
                        "value": "[parameters('threads')]"
                    },
                    "targetOperationsPerSecond": {
                        "value": "[parameters('targetOperationsPerSecond')]"
                    },
                    "ycsbRecordCount": {
                        "value": "[parameters('ycsbRecordCount')]"
                    },
                    "ycsbOperationCount": {
                        "value": "[parameters('ycsbOperationCount')]"
                    },
                    "ycsbGitRepositoryURL": {
                        "value": "[parameters('ycsbGitRepositoryURL')]"
                    },
                    "ycsbGitBranchName": {
                        "value": "[parameters('ycsbGitBranchName')]"
                    },
                    "vmScriptExtensionScriptURL": {
                        "value": "[parameters('vmScriptExtensionScriptURL')]"
                    },
                    "vmScriptExtensionScriptName": {
                        "value": "[parameters('vmScriptExtensionScriptName')]"
                    },
                    "cloudInit": {
                        "value": "[parameters('cloudInit')]"
                    }

                }
            }
        }
    ],
    "outputs": {
    }
}
